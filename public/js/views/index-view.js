// Generated by CoffeeScript 1.6.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['chaplin', 'views/base/view', 'text!templates/index.hbs', 'models/room'], function(Chaplin, View, template, Room) {
  'use strict';
  var IndexView, _ref;
  return IndexView = (function(_super) {
    __extends(IndexView, _super);

    function IndexView() {
      _ref = IndexView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    IndexView.prototype.autoRender = true;

    IndexView.prototype.className = 'index';

    IndexView.prototype.template = template;

    template = null;

    IndexView.prototype.events = {
      'click button': 'handleButtonClick'
    };

    IndexView.prototype.handleButtonClick = function() {
      var room;
      room = new Room;
      return room.save({}, {
        success: function(room, response) {
          return Chaplin.helpers.redirectTo('room#show', {
            id: room.get('id')
          });
        }
      });
    };

    return IndexView;

  })(View);
});
