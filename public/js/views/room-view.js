// Generated by CoffeeScript 1.6.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['chaplin', 'views/base/view', 'text!templates/room.hbs', 'models/room'], function(Chaplin, View, template, Room) {
  'use strict';
  var RoomView, _ref;
  return RoomView = (function(_super) {
    __extends(RoomView, _super);

    function RoomView() {
      _ref = RoomView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    RoomView.prototype.autoRender = true;

    RoomView.prototype.className = 'room';

    RoomView.prototype.template = template;

    template = null;

    RoomView.prototype.getTemplateData = function() {
      debugger;
      return camera.init({
        targetCanvas: $('#local-camera'),
        onFrame: function(canvas) {
          debugger;
        },
        onSuccess: function() {
          return console.log('success');
        },
        onError: function(error) {
          return console.log(error);
        },
        onNotSupported: function() {
          return console.log('not supo');
        }
      });
    };

    return RoomView;

  })(View);
});
